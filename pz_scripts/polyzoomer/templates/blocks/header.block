<!--
*   Author: Sebastian Schmittner
*   Date:
*   LastAuthor: Sebastian Schmittner
*   LastDate: 2014.12.07 10:05:49 (+01:00)
*   Version: 0.1.1
*   Version Key: VERSIONKEY
-->
<!DOCTYPE html>
<html>
<head>
<link rel="icon" 
      type="image/png" 
      href="http://yuanlab.org/logos/LogoPolyzoomer1.0fav.png">

    <meta charset='utf-8'>

    <title>ImageOmics Polyzoomer</title>

    <link rel='stylesheet' 
          type='text/css'
          media='screen'
          href='_PATH_TO_CSS_/style.css'/>


        <link rel='stylesheet' type='text/css' media='screen' href='../css/jquery-ui.min.css'/>
        <link rel='stylesheet' type='text/css' media='screen' href='../css/jquery-ui.structure.min.css'/>
        <link rel='stylesheet' type='text/css' media='screen' href='../css/jquery-ui.theme.min.css'/>

    <script type="text/javascript" src="../jquery.js"></script>
    <script type="text/javascript" src="../jquery-ui.min.js"></script>
    <script type="test/javascript" src="../d3.v3.min.js" charset="utf-8"></script>
    <script type="text/javascript" src="../sgbeal-colorpicker-20070712.jquery.js"></script>

	<script type="text/javascript" src="../openseadragon.min.js"></script>
    <script type="text/javascript" src="../openseadragon-svg-overlay.js"></script>
    <!-- <script type="text/javascript" src="../polyzoomerAnnotations.js"></script> --!>
    <script type="text/javascript" src="../openseadragon-viewerinputhook.min.js"></script>
    <!-- <script type="text/javascript" src="../polyzoomerDrawAnnotations.js"></script> --!>
    <script type="text/javascript" src="../polyzoomerPlugin.js"></script>

    <script type="text/javascript" src="../openseadragon-scalebar.js"></script>
    <script type="text/javascript" src="../scrollWidth.js"></script>

    <!-- andreas.heindl@icr.ac.uk -->

<script>


    var viewer = null;
    var Seadragon;
    Seadragon = OpenSeadragon;
    OpenSeadragon.Utils = OpenSeadragon;
	
function SyncImage(viewer, viewerToSyncWith) {
	console.log('Syncing');
	viewer.viewport.panTo(viewerToSyncWith.viewport.getCenter());
	viewer.viewport.zoomTo(viewerToSyncWith.viewport.getZoom());
}

var hFuncHandler=function myHandler(inViewer) {
    
        var SourceViewer = inViewer.eventSource;
	var viewersToSync = [];
	
	for (var key in ViewerHash) {
		if (ViewerHash.hasOwnProperty(key)) {
			if(key != SourceViewer.id) {
				if(ViewerHash[key].id == SourceViewer.id) {
					viewersToSync.push(key);
				}
			}
		}
	}
	
	console.log('Hashes for SourceViewer: ', viewersToSync);
    
	for(var viewer = 0; viewer < viewersToSync.length; ++viewer) {
		TargetViewer = window[viewersToSync[viewer]];   
		
		if (!TargetViewer.isOpen()) {
			console.log('TargetViewer is not open');
		}

		console.log('Starting live sync...', SourceViewer.id, ' with ', TargetViewer.id);
		SyncImage(TargetViewer,SourceViewer)      
		console.log('done');
	}
}
  
function LiveSync(SourceViewer) {
  console.log('Attaching live sync handler to ',SourceViewer.id);
  SourceViewer.addHandler("animation",hFuncHandler);
}

function UnLiveSync(SourceViewer) {
  console.log('Removing handler from ',SourceViewer.id);
  SourceViewer.removeHandler("animation",hFuncHandler)
}

function SyncThemAll()
{